apply plugin: 'com.android.application'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao'

android {

  dataBinding {
    enabled = true
  }

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")

    defaultConfig {
      minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
      targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

      applicationId globalConfiguration.getAt("androidApplicationId")
      versionCode globalConfiguration.getAt("androidVersionCode")
      versionName globalConfiguration.getAt("androidVersionName")
      testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
      testApplicationId globalConfiguration.getAt("testApplicationId")
      multiDexEnabled true
    }

  dexOptions {
    javaMaxHeapSize "4g"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'            //Some libraries have issues with this.
    disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
    disable 'IconDensities'             //For testing purpose. This is safe to remove.
    disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
  }

  signingConfigs {
    debug {
      storeFile file('../buildsystem/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
  }
    buildToolsVersion androidBuildToolsVersion
}

greendao {
  schemaVersion 1
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies


  implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
  implementation project(':domain')
  implementation project(':data')

  annotationProcessor presentationDependencies.daggerCompiler

  implementation presentationDependencies.dagger
  implementation presentationDependencies.greendao
  implementation presentationDependencies.recyclerView
  implementation presentationDependencies.supportDesign
  implementation presentationDependencies.appCompat
  implementation presentationDependencies.multiDex
  implementation presentationDependencies.qrGet
  implementation presentationDependencies.qrGetAndroid
  implementation presentationDependencies.mvi
  implementation presentationDependencies.mviViewState
  implementation presentationDependencies.rxbinding
  implementation presentationDependencies.rxbindingSupport
  implementation presentationDependencies.rxbindingDesign
  implementation presentationDependencies.rxJava
  implementation presentationDependencies.rxAndroid
  implementation presentationDependencies.ahbottomnavigation
  implementation presentationDependencies.cardView
  implementation presentationDependencies.slidingUpPanel
  implementation presentationDependencies.glide
  implementation presentationDependencies.circleIndicator


  compileOnly presentationDependencies.javaxAnnotation

  androidTestImplementation presentationTestDependencies.mockito
  androidTestImplementation presentationTestDependencies.dexmaker
  androidTestImplementation presentationTestDependencies.dexmakerMockito
  androidTestImplementation presentationTestDependencies.espresso
  androidTestImplementation presentationTestDependencies.testingSupportLib

  //Development
  implementation developmentDependencies.leakCanary
  implementation (presentationDependencies.qrReader){
    transitive = true
  }
}
